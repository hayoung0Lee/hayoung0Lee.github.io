{"version":3,"sources":["webpack://my-gatsby-site/./src/components/card-layout.tsx","webpack://my-gatsby-site/./src/pages/everything.js"],"names":["CardLayoutWrapper","styled","Card","CardTitle","CardBody","contents","map","d","id","previewData","html","substring","Link","key","to","frontmatter","slug","title","dangerouslySetInnerHTML","__html","data","allMarkdownRemark","nodes"],"mappings":"oJAIMA,EAAoBC,oBAAH,0EAAGA,CAAH,qKAajBC,EAAOD,oBAAH,6DAAGA,CAAH,wLASJE,EAAYF,mBAAH,kEAAGA,CAAH,4FAOTG,EAAWH,oBAAH,iEAAGA,CAAH,wHAwCd,IAhCmB,SAAC,GAAiB,IAAfI,EAAe,EAAfA,SACpB,OACE,gBAACL,EAAD,KACGK,EAASC,KACR,SACEC,EAIAC,GACG,MACGC,EAAW,UAAGF,EAAEG,YAAL,aAAG,EAAQC,UAAU,EAAG,KACzC,OACE,gBAAC,EAAAC,KAAD,CAAMC,IAAKL,EAAIM,GAAIP,EAAEQ,YAAYC,MAC/B,gBAACd,EAAD,KACE,gBAACC,EAAD,KAAYI,EAAEQ,YAAYE,OACzBR,EACC,gBAACL,EAAD,CACEc,wBAAyB,CAAEC,OAAQV,KAGrC,gBAACL,EAAD,2B,2EC7BlB,UATuB,SAAC,GAAc,IAAZgB,EAAW,EAAXA,KACxB,OACE,gBAAC,IAAD,KACE,6CACA,gBAAC,IAAD,CAAYf,SAAUe,EAAKC,kBAAkBC","file":"component---src-pages-everything-js-c8b226a45fcdbb686350.js","sourcesContent":["import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\";\n\nconst CardLayoutWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 250px);\n  gap: 10px;\n  grid-auto-rows: 300px;\n  justify-content: space-between;\n\n  & a {\n    color: inherit;\n    text-decoration: none;\n  }\n`;\n\nconst Card = styled.div`\n  width: 250px;\n  border: 1px solid rgba(119, 119, 119, 0.6);\n  border-radius: 5px;\n  -webkit-box-shadow: 0 10px 6px -6px #777;\n  -moz-box-shadow: 0 10px 6px -6px #777;\n  box-shadow: 0 10px 6px -6px #777;\n`;\n\nconst CardTitle = styled.h4`\n  width: 250px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-left: 5px;\n`;\nconst CardBody = styled.div`\n  height: 200px;\n  padding: 5px 5px 0px;\n  border-radius: 0 0 5px 5px;\n  overflow: hidden;\n  background-color: rgba(119, 119, 119, 0.2);\n`;\n\nconst CardLayout = ({ contents }) => {\n  return (\n    <CardLayoutWrapper>\n      {contents.map(\n        (\n          d: {\n            frontmatter: { title: React.ReactNode; slug: string };\n            html: any;\n          },\n          id: React.Key\n        ) => {\n          const previewData = d.html?.substring(0, 250); // FIXME: 이거 일단 그냥 string으로 잘랐는데, 문제가 좀 있을듯\n          return (\n            <Link key={id} to={d.frontmatter.slug}>\n              <Card>\n                <CardTitle>{d.frontmatter.title}</CardTitle>\n                {previewData ? (\n                  <CardBody\n                    dangerouslySetInnerHTML={{ __html: previewData }}\n                  ></CardBody>\n                ) : (\n                  <CardBody>어쩌면 미리보기..</CardBody>\n                )}\n              </Card>\n            </Link>\n          );\n        }\n      )}\n    </CardLayoutWrapper>\n  );\n};\n\nexport default CardLayout;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport CardLayout from \"../components/card-layout\";\n\nexport const query = graphql`\n  {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/markdown-pages/everything/\" } }\n    ) {\n      nodes {\n        frontmatter {\n          title\n          slug\n          date\n        }\n        html\n        fileAbsolutePath\n      }\n    }\n  }\n`;\n\n// markup\nconst EverythingPage = ({ data }) => {\n  return (\n    <Layout>\n      <h3>Everything Page</h3>\n      <CardLayout contents={data.allMarkdownRemark.nodes} />\n    </Layout>\n  );\n};\n\nexport default EverythingPage;\n"],"sourceRoot":""}